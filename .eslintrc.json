{
    "extends": [
        "./node_modules/eslint-config-react-app/index.js"
    ],
    "parserOptions": {
        "project": [
            "./tsconfig.json"
        ]
    },
    "overrides": [
        {
            "files": [
                "**/*.ts",
                "**/*.tsx"
            ],
            "rules": {
                "consistent-return": [
                    0
                ],
                "@typescript-eslint/no-unsafe-return": [
                    2
                ],
                "padding-line-between-statements": [
                    2,
                    {
                        "blankLine": "always",
                        "prev": [
                            "const",
                            "let",
                            "var"
                        ],
                        "next": "*"
                    },
                    {
                        "blankLine": "any",
                        "prev": [
                            "const",
                            "let",
                            "var"
                        ],
                        "next": [
                            "const",
                            "let",
                            "var"
                        ]
                    }
                ],
                "react/prop-types": 0,
                "react/jsx-closing-bracket-location": [
                    2,
                    {
                        "nonEmpty": "after-props",
                        "selfClosing": "tag-aligned"
                    }
                ],
                "react/jsx-curly-brace-presence": [
                    1,
                    {
                        "props": "never",
                        "children": "never",
                        "propElementValues": "always"
                    }
                ],
                "space-before-function-paren": [
                    "error",
                    {
                        "anonymous": "never",
                        "named": "never",
                        "asyncArrow": "always"
                    }
                ],
                "comma-dangle": [
                    2,
                    "always-multiline"
                ],
                "operator-linebreak": [
                    2,
                    "after",
                    {
                        "overrides": {
                            "?": "before",
                            ":": "before"
                        }
                    }
                ]
            }
        }
    ]
}
